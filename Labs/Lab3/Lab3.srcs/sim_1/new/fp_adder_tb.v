`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2024/03/25 21:21:17
// Design Name: 
// Module Name: fp_adder_tb
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module fp_adder_tb();

    reg clk, rst;
    reg [31:0] a, b;
    wire [31:0] sum;

    fp_adder U0(.clk(clk), .rst(rst), .a(a), .b(b), .sum(sum));

    initial begin

        clk = 0;
        rst = 0;
        #10;

        // 0.75 + 0.625
        rst = 1; #5; rst = 0;
        a = 32'b0_01111110_10000000000000000000000;
        b = 32'b0_01111110_01000000000000000000000;
        #100;

        // 0.75 - 1.5
        rst = 1; #5; rst = 0;
        a = 32'b0_01111110_10000000000000000000000;
        b = 32'b1_01111111_10000000000000000000000;
        #100;

        // 10000 - 20000
        rst = 1; #5; rst = 0;
        a = 32'b0_10001100_00111000100000000000000;
        b = 32'b1_10001101_00111000100000000000000;
        #120;

        // 0.5 - 0.4375
        rst = 1; #5; rst = 0;
        a = 32'b0_01111110_00000000000000000000000;
        b = 32'b1_01111101_11000000000000000000000;
        #140;

        // 0 - 1.5
        rst = 1; #5; rst = 0;
        a = 32'b0_00000000_00000000000000000000000;
        b = 32'b1_01111111_10000000000000000000000;
        #80;

        // 1.5 - 1.5
        rst = 1; #5; rst = 0;
        a = 32'b0_01111111_10000000000000000000000;
        b = 32'b1_01111111_10000000000000000000000;
        #100;

        // overflow
        rst = 1; #5; rst = 0;
        a = 32'b0_11111110_11111111111111111111111;
        b = 32'b0_11111110_11111111111111111111111;
        #100;

        // underflow
        rst = 1; #5; rst = 0;
        a = 32'b0_00000000_10000000000000000000000;
        b = 32'b1_00000000_11000000000000000000000;
        #100;

        // +INF + 1.5
        rst = 1; #5; rst = 0;
        a = 32'b0_11111111_00000000000000000000000;
        b = 32'b0_01111111_10000000000000000000000;
        #80;

        // +INF + -INF
        rst = 1; #5; rst = 0;
        a = 32'b0_11111111_00000000000000000000000;
        b = 32'b1_11111111_00000000000000000000000;
        #80;

        // NaN + 1.5
        rst = 1; #5; rst = 0;
        a = 32'b0_11111111_10000000000000000000000;
        b = 32'b0_01111111_10000000000000000000000;
        #80;

    end

    always begin
        #5 clk = ~clk;
    end

endmodule